{"version":3,"sources":["reducers/postsReducer.js","context/postContext.js","components/form.js","components/feed.js","components/modal.js","App.js","index.js"],"names":["postsReducer","state","action","type","storagePosts","newPost","filter","post","id","deletedPost","splice","editedPost","index","PostContext","createContext","PostsContextProvider","children","useReducer","posts","postsDispatch","useState","openModal","setOpenModal","modalPost","setModalPost","useEffect","JSON","parse","localStorage","getItem","err","console","error","setItem","stringify","Provider","value","addPost","postText","text","uuid","deletePost","editPost","toggleModal","usePosts","useContext","useStyles","makeStyles","form","marginBottom","input","PostsForm","setPostText","classes","handlePost","className","onSubmit","e","preventDefault","TextField","onChange","target","onKeyUp","key","placeholder","multiline","rows","variant","fullWidth","Button","color","display","gap","border","borderRadius","Feed","List","map","ListItem","ListItemText","onClick","Modal","setEditedPost","Dialog","open","aria-labelledby","DialogTitle","DialogContent","autoFocus","defaultValue","DialogActions","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ee903e8.chunk.js","sourcesContent":["export const postsReducer = (state, action) => {\n    switch (action.type) {\n        case 'GET_POSTS':\n            return action.storagePosts\n        case 'ADD_POST':\n            return [...state, action.newPost]\n        case 'DELETE_POST':\n            return state.filter(post => post.id !== action.deletedPost.id)\n        case 'EDIT_POST':\n            state.splice(action.editedPost.index, 1, action.editedPost)\n            return [...state]\n        default:\n            break;\n    }\n}","import { createContext, useState, useContext, useReducer, useEffect } from \"react\";\nimport {v4 as uuid} from 'uuid'\n\nimport {postsReducer} from '../reducers/postsReducer'\n\nconst PostContext = createContext({})\n\nexport function PostsContextProvider({children}){\n\n    const [posts, postsDispatch] = useReducer(postsReducer, [])\n    const [openModal, setOpenModal] = useState(false)\n    const [modalPost, setModalPost] = useState({})\n   \n\n    const addPost = postText =>{\n        const newPost = {\n            text: postText,\n            id: uuid()\n        }\n        postsDispatch({type: 'ADD_POST', newPost})\n    }\n\n    const deletePost = deletedPost => postsDispatch({type: 'DELETE_POST', deletedPost})          \n\n    const editPost = editedPost => {\n        setOpenModal(!openModal)\n        postsDispatch({type: 'EDIT_POST', editedPost})\n    }\n\n    const toggleModal = (post, index) => {\n        setOpenModal(!openModal)   \n        setModalPost({...post, index: index})     \n    }\n\n    useEffect(()=>{\n        let storagePosts\n        try {\n            storagePosts = JSON.parse(localStorage.getItem('posts')) || \"[]\"\n        } catch(err) {\n            console.error(err)\n            storagePosts = []\n        }\n        postsDispatch({type: 'GET_POSTS', storagePosts})\n    }, [])\n\n    useEffect(()=>{\n        localStorage.setItem('posts', JSON.stringify(posts))\n    }, [posts])\n\n    return(\n        <PostContext.Provider value={{\n            posts,\n            addPost, \n            deletePost,\n            editPost,\n            modalPost,\n            openModal, \n            toggleModal\n        }}>\n            {children}\n        </PostContext.Provider>\n\n    )\n}\n\nexport const usePosts = ()=> {\n    return useContext(PostContext)\n}","import { useState } from \"react\";\nimport { usePosts } from \"../context/postContext\";\nimport { TextField, Button, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  form: {\n    marginBottom: '2rem'\n  },\n  input: {\n    marginBottom: '1rem'\n  }\n})\n\nfunction PostsForm() {\n\n  const [postText, setPostText] = useState('')\n  \n  const {addPost} = usePosts()\n  \n  const classes = useStyles()\n\n  const handlePost = () => {\n      addPost(postText)\n      setPostText('')\n  }\n\n  return (\n    <form action=\"submit\" className={classes.form} onSubmit={(e) => {\n      e.preventDefault()\n      handlePost()\n    }} >\n      <TextField\n        className={classes.input}\n        onChange={(e) => setPostText(e.target.value)}\n        onKeyUp={(e) => e.key === \"Enter\" && handlePost()}\n        id=\"outlined-multiline-static\"\n        value={postText}\n        placeholder=\"Share your thoughts\"\n        multiline\n        rows={4}\n        variant=\"outlined\"\n        fullWidth={true}\n      />\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n        Post\n      </Button>\n    </form>\n  );\n}\n\nexport default PostsForm;\n","import { List, ListItem, ListItemText, Button } from \"@material-ui/core\";\nimport { usePosts } from \"../context/postContext\";\nimport {makeStyles} from \"@material-ui/styles\"\n\n\nconst useStyles = makeStyles({\n  post: {\n    display: 'flex',\n    gap: '1rem',\n    border: '1px solid rgba(0, 0, 0, .2)',\n    borderRadius: '5px',\n    marginBottom: '.5rem'\n  },\n})\n\n\nfunction Feed() {\n  const { posts, deletePost, toggleModal } = usePosts();\n\n  const classes = useStyles()\n\n  return (\n    <List>\n      {posts && posts.map((post, index) => (\n          <ListItem className={classes.post} key={index}>\n              <ListItemText >{post.text}</ListItemText>\n              <Button onClick={()=> deletePost(post)} variant=\"contained\" color=\"secondary\">Delete</Button>\n              <Button onClick={()=> toggleModal(post, index)} variant=\"contained\" color=\"default\">Edit</Button>\n          </ListItem>\n      ))}\n    </List>\n  );\n}\n\nexport default Feed;\n","import {useState}from 'react';\nimport { Button, TextField, Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText, Dialogtitle } from '@material-ui/core';\nimport {usePosts} from '../context/postContext'\n\nfunction Modal() {\n  \n  const [editedPost, setEditedPost] = useState({})\n\n  const {openModal, toggleModal, editPost, modalPost} = usePosts()\n\n\n  return (\n    <div>\n     <Dialog open={openModal}  aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Edit</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            onChange={(e) => setEditedPost({id: modalPost.id, text: e.target.value, index: modalPost.index})}\n            id=\"outlined-multiline-static\"\n            defaultValue={modalPost.text}\n            multiline\n            rows={4}\n            variant=\"outlined\"\n            fullWidth={true}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleModal} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={()=> editPost(editedPost)} color=\"primary\">\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default Modal;","import \"./App.css\";\nimport PostsForm from \"./components/form\";\nimport Feed from \"./components/feed\";\nimport { PostsContextProvider} from \"./context/postContext.js\";\nimport Modal from './components/modal'\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <PostsContextProvider>\n        <PostsForm />\n        <Feed />\n        <Modal/>\n      </PostsContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}